name: Rust

on:
  push:
    branches:
      - main
  pull_request: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install nightly --profile minimal --component rustfmt --component clippy
      - uses: Swatinem/rust-cache@v2
      - name: clippy
        run: |
          cargo clippy --workspace --all-targets --all-features -- -D warnings
      - name: rustfmt
        run: |
          cargo fmt --all --check

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::broken-intra-doc-links"
        run: |
          cargo doc --all-features --no-deps

  tests:
    needs: check
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - store: rusqlite_store

    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install stable --profile minimal
          cargo install cargo-tarpaulin
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest
      - name: Run integration tests
        run: |
          cargo nextest run ${{ matrix.store }}_test
          cargo tarpaulin -olcov
      - name: Upload coverage data to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
